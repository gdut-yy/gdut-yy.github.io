import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a,o as n}from"./app-D75trwlE.js";const l={};function t(h,s){return n(),e("div",null,s[0]||(s[0]=[a(`<h1 id="redis-实战" tabindex="-1"><a class="header-anchor" href="#redis-实战"><span>Redis 实战</span></a></h1><h2 id="_1-maven-坐标" tabindex="-1"><a class="header-anchor" href="#_1-maven-坐标"><span>1 maven 坐标</span></a></h2><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-data-redis&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://spring.io/projects/spring-data-redis" target="_blank" rel="noopener noreferrer">https://spring.io/projects/spring-data-redis</a></p><p>从 <code>springboot 2</code> 开始，redis 默认连接池从 <code>jedis</code> 换成了 <code>lettuce</code></p><p><code>spring-boot-starter-data-redis</code> = <code>spring-data-redis</code> + <code>lettuce-core</code></p><h2 id="_2-properties-配置" tabindex="-1"><a class="header-anchor" href="#_2-properties-配置"><span>2 properties 配置</span></a></h2><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">spring.redis.cluster.nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">localhost.ubuntu0.com:6379,localhost.ubuntu0.com:6380,localhost.ubuntu1.com:6379,localhost.ubuntu1.com:6380,localhost.ubuntu2.com:6379,localhost.ubuntu2.com:6380</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">spring.redis.password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">[hidden]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-数据结构" tabindex="-1"><a class="header-anchor" href="#_3-数据结构"><span>3 数据结构</span></a></h2><p>以下是几道常见的 Redis 面试题：</p><ol><li>Redis 支持的数据类型有哪些？（一般回答 5 种。string、hash、list、set、zset）</li><li>Redis 为什么这么快？或者 Redis 为什么是单线程的</li></ol><p>当前 Redis 最新版本 6.2.6，以上答案已经不再正确，数据类型不止 5 种。</p><p>我们可以从官方文档找到答案</p><p><a href="https://redis.io/topics/data-types-intro" target="_blank" rel="noopener noreferrer">https://redis.io/topics/data-types-intro</a></p><ul><li>Binary-safe strings.</li><li>Lists: collections of string elements sorted according to the order of insertion. They are basically linked lists.</li><li>Sets: collections of unique, unsorted string elements.</li><li>Sorted sets, similar to Sets but where every string element is associated to a floating number value, called score. The elements are always taken sorted by their score, so unlike Sets it is possible to retrieve a range of elements (for example you may ask: give me the top 10, or the bottom 10).</li><li>Hashes, which are maps composed of fields associated with values. Both the field and the value are strings. This is very similar to Ruby or Python hashes.</li><li>Bit arrays (or simply bitmaps): it is possible, using special commands, to handle String values like an array of bits: you can set and clear individual bits, count all the bits set to 1, find the first set or unset bit, and so forth.</li><li>HyperLogLogs: this is a probabilistic data structure which is used in order to estimate the cardinality of a set. Don&#39;t be scared, it is simpler than it seems... See later in the HyperLogLog section of this tutorial.</li><li>Streams: append-only collections of map-like entries that provide an abstract log data type. They are covered in depth in the Introduction to Redis Streams.</li></ul><hr><blockquote><ul><li>二进制安全 <code>字符串</code>。</li><li><code>列表</code>: 根据插入顺序排序的字符串元素的集合。它们基本上是链表。</li><li><code>集合</code>: 唯一的、未排序的字符串元素的集合。</li><li><code>有序集合</code>: 类似于集合，但其中每个字符串元素都与一个称为 score 的浮点数值相关联。元素总是按照其得分进行排序，所以与集合不同的是，它可以检索一系列元素(例如，你可能会问:给我前 10 个，或后 10 个)。</li><li><code>散列</code>: 它是由与值相关联的字段组成的映射。字段和值都是字符串。这非常类似于 Ruby 或 Python 的散列。</li><li><code>位数组(或简单的位图)</code>: 可以使用特殊的命令来处理像位数组一样的字符串值:你可以设置和清除单个位，计算所有设置为 1 的位，找到第一个设置或未设置的位，等等。</li><li><code>HyperLogLogs</code>: 这是一个概率数据结构，用于估计集合的基数。不要害怕，事情比看起来简单……请参阅本教程后面的 HyperLogLog 部分。</li><li><code>流</code>: 只添加提供抽象日志数据类型的类似映射的条目的集合。在 Redis 流介绍中有详细介绍。</li></ul></blockquote><h2 id="_4-事务-multi-exec-discard" tabindex="-1"><a class="header-anchor" href="#_4-事务-multi-exec-discard"><span>4 事务 multi, exec, discard</span></a></h2><p><code>组队阶段</code>：若有报错，整个队列都会被取消。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1:6379</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">multi</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">OK</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1:6379(TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; set k1 v1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1:6379(TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; set k2 v2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1:6379(TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; set k3</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ERR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wrong</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> number</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> arguments</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;set&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> command</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1:6379(TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; exec</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">EXECABORT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Transaction</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> discarded</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> because</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> previous</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> errors.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1:6379</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>执行阶段</code>：只有报错的命令不会被执行，其他命令都会被执行，不会回滚。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1:6379</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">multi</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">OK</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1:6379(TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; set k1 v1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1:6379(TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; incr k1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1:6379(TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; set k2 v2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">QUEUED</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1:6379(TX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)&gt; exec</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) OK</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) ERR value is not an integer or out of range</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) OK</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">127.0.0.1:6379</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（全文完）</p>`,23)]))}const p=i(l,[["render",t],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/module_devtest/dt_redis_action/","title":"Redis 实战","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1 maven 坐标","slug":"_1-maven-坐标","link":"#_1-maven-坐标","children":[]},{"level":2,"title":"2 properties 配置","slug":"_2-properties-配置","link":"#_2-properties-配置","children":[]},{"level":2,"title":"3 数据结构","slug":"_3-数据结构","link":"#_3-数据结构","children":[]},{"level":2,"title":"4 事务 multi, exec, discard","slug":"_4-事务-multi-exec-discard","link":"#_4-事务-multi-exec-discard","children":[]}],"git":{"createdTime":1702795363000,"updatedTime":1702795363000,"contributors":[{"name":"gdut-yy","username":"gdut-yy","email":"gdut_yy@163.com","commits":1}]},"readingTime":{"minutes":2.89,"words":868},"filePathRelative":"module_devtest/dt_redis_action/README.md","localizedDate":"2023年12月17日"}');export{p as comp,k as data};
